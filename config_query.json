{ 
   "templates":{
      "faction": {
         "column": "basic_faction",
         "table": "logic_hero_death",
         "type": "dropdown_db_list",
         "text": "Faction",      
         "sql": "SELECT DISTINCT basic_faction, basic_faction FROM logic_hero_death ORDER BY basic_faction ASC" 
      },
      "hero": {
         "column": "hero",
         "table": "logic_hero_attributes",
         "type": "dropdown_db_list",
         "text": "Hero",        
         "sql": "SELECT DISTINCT hero, hero FROM logic_hero_attributes ORDER BY hero ASC"
      },
      "ability": {
         "column": "descid",
         "table": "logic_hero_ability_unlock",
         "type": "dropdown_db_list",
         "text": "Ability",    
         "sql": "SELECT DISTINCT descid, descid FROM logic_hero_ability_unlock ORDER BY descid ASC" 
      },
      "race": {
         "column": "race",
         "table": "pregame_skirmish_faction",
         "type": "dropdown_db_list",
         "text": "Race",    
         "sql": "SELECT DISTINCT race, race FROM pregame_skirmish_faction ORDER BY race ASC" 
      },
      "hero_type": {
         "column": "hero_type",
         "table": "abilities_lookup",
         "type": "dropdown_db_list",
         "text": "Hero",    
         "sql": "SELECT DISTINCT hero_type, hero_type FROM abilities_lookup ORDER BY hero_type ASC" 
      },
      "general_map": {
         "column": "general_map",
         "table": "pregame_skirmish_configuration",
         "type": "dropdown_db_list",
         "text": "Map",    
         "sql": "SELECT name, map_id FROM Maps ORDER BY map_id ASC"
      },
      "range": {
         "type": "dropdown_list_input",
         "table": "",
         "text": "Range",
         "attr": [
            {
               "text": "less than", 
               "value": "<"
            },
            {
               "text": "less than or equal", 
               "value": "<="
            },
            {
               "text": "greater than",
               "value": ">"
            },
            {
               "text": "greater than or equal",
               "value": ">="
            },
            {
               "text": "between",
               "value": "<>"
            },
            {
               "text": "equal to",
               "value": "="
            },
            {
               "text": "not equal to",
               "value": "!="
            }
         ]
      },
      "equals": {
         "type": "dropdown_list_input",
         "table": "",
         "text": "Equals",
         "attr": [
            {
               "text": "equal to",
               "value": "="
            },
            {
               "text": "not equal to",
               "value": "!="
            }
         ]
      },      
      "loot": {
         "text" : "Loot",
         "table": "",
         "type" : "dropdown_list_input",
         "attr" : [
            {
               "text" : "loot name",
               "type" : "equals",
               "column" : "descid"
            }
         ]
      },
      "player_xp": {
         "text" : "Player XP",
         "table": "",
         "type": "dropdown_list_input",
         "attr" : [
          {
            "text": "strength",
            "table": "",
            "type": "range",
            "column": "astr"
           },
          {
            "text": "dexterity",
            "table": "",
            "type": "range",
            "column": "adex"
         },
         {
            "text": "intelligence",
            "table": "",
            "type": "range",
            "column": "aint"
         },
         {
            "text": "constitution",
            "table": "",
            "type": "range",
            "column": "acon"
         },
         {
            "text": "willpower",
            "table": "",
            "type": "range",
            "column": "awil"
         }
         ]
      },
      "time": {
         "text" : "Time",
         "table": "",
         "type": "dropdown_list_input",
         "attr" : [
            {
              "text": "minutes",
              "table": "",
              "type": "range",
              "column": "tick_minutes"
             }
         ]
      },
      "basic_tick": {
         "text" : "Time",
         "table": "",
         "type": "dropdown_list_input",
         "attr" : [
            {
              "text": "basic tick",
              "table": "",
              "type": "range",
              "column": "basic_tick"
             }
         ]
      },
      "resources": {
         "text" : "Resources owned",
         "table": "",
         "type": "dropdown_list_input",
         "attr" : [
            {
              "text": "planks",
              "type": "range",
              "table": "",
              "column": "resources_planks"
             },
             {
               "text": "food",
               "type": "range",
               "table": "",
               "column": "resources_food"
             },   
             {
               "text": "bricks",
               "type": "range",
               "table": "",
               "column": "resources_bricks"
             },
             {
               "text": "iron",
               "type": "range",
               "table": "",
               "column": "resources_iron"
             },
             {
               "text": "aria",
               "type": "range",
               "table": "",
               "column": "resources_aria"
             },
             {
               "text": "lenya",
               "type": "range",
               "table": "",
               "column": "resources_lenya"
             },
             {
               "text": "black ash",
               "type": "range",
               "table": "",
               "column": "resources_blackash"
             }
            ]
      },
      "temp_bool": {
         "text" : "Resources owned",
         "table": "",
         "type": "dropdown_list_bool",
         "attr" : [
            {
              "text": "Has AI players",
              "type": "bool",
              "table": "",
              "column": "resources_planks"
             },
             {
               "text": "Has more than 2 players",
               "type": "bool",
               "table": "",
               "column": "resources_food"
             }
            ]         
      }    
   },   
  "order":[
     {
        "text":"Ascending",
        "type": "dropdown",
        "value":" ASC"
     },
     {
        "text":"Descending",
        "type": "dropdown",
        "value":" DESC"
     }
  ],
  "limit":[
     "10",
     "20",
     "50",
     "100",
     "200",
     "300",
     "500",
     "1000",
     "2000",
     "5000",
     "10000"
  ],
  "configurator":[
      {
         "text": "Abilities Lookup Table",
         "type": "graph",
         "format": "table",
         "value": ["*"],
         "table": [
                     "abilities_lookup"
         ]
      },
      {
         "text": "Buildings Started",
         "type": "graph",
         "format": "table",
         "value": [
            "desc1,",
            "building_started,",
            "building_destroyed,",
            "building_demolish,",
            "ROUND((CAST(building_destroyed AS DECIMAL) / building_started), 4) as rate_destroyed,",
            "ROUND((CAST(building_demolish AS DECIMAL) / building_started), 4) as rate_demolished"
         ],
         "table": [
            "(",
            "SELECT",
               "logic_building_started.descid as desc1,",
               "COUNT(*) as building_started",
            "FROM",
               "logic_building_started",
            "GROUP BY",
               "logic_building_started.descid",
         ") as subtable1",
         "LEFT JOIN",
            "(",
            "SELECT",
               "logic_building_started.descid  as desc2,",
               "COUNT(*) as building_destroyed",
            "FROM",
               "logic_building_destroyed",
            "INNER JOIN",
               "logic_building_started ON",
                  "logic_building_started.session_id = logic_building_destroyed.session_id AND",
                  "logic_building_started.basic_sessionid = logic_building_destroyed.basic_sessionid AND",
                  "logic_building_started.basic_faction = logic_building_destroyed.basic_faction AND",
                  "logic_building_started.buildingid = logic_building_destroyed.buildingid",	
            "GROUP BY",
               "logic_building_started.descid",
         ") as subtable2 ON",
            "subtable1.desc1 = subtable2.desc2",
         "LEFT JOIN",
         "(",
            "SELECT",
               "logic_building_started.descid  as desc3,",
               "COUNT(*) as building_demolish",
            "FROM",
               "logic_building_demolish",
            "INNER JOIN",
               "logic_building_started ON",
                  "logic_building_started.session_id = logic_building_demolish.session_id AND",
                  "logic_building_started.basic_sessionid = logic_building_demolish.basic_sessionid AND",
                  "logic_building_started.basic_faction = logic_building_demolish.basic_faction AND",
                  "logic_building_started.buildingid = logic_building_demolish.buildingid",	
            "GROUP BY",
               "logic_building_started.descid",
         ") as subtable3 ON",
            "subtable1.desc1 = subtable3.desc3"	
         ],
         "order_by": ["desc1"]
      },
      {
         "text": "Buildings Started Per Player",
         "type": "graph",
         "format": "table",
         "value": [
            "desc1,",
            "ROUND((CAST(building_started AS DECIMAL) / total_players), 2) as building_started_per_player,",
            "total_players"
         ],
         "table": [
            "(",
            "SELECT",
               "logic_building_started.descid as desc1,",
               "COUNT(*) as total_players",
            "FROM",
               "pregame_skirmish_faction",
            "INNER JOIN",
               "logic_building_started ON",
                  "pregame_skirmish_faction.session_id = logic_building_started.session_id AND",
                  "pregame_skirmish_faction.sessionid = logic_building_started.basic_sessionid AND",
                  "pregame_skirmish_faction.faction = logic_building_started.basic_faction",		
            "GROUP BY",
               "logic_building_started.descid",
         ") as subtable1",
      "LEFT JOIN",
         "(",
            "SELECT",
               "logic_building_started.descid as desc2,",
               "COUNT(*) as building_started",
            "FROM",
               "logic_building_started",
            "GROUP BY",
               "logic_building_started.descid",
         ") as subtable2 ON",
            "subtable1.desc1 = subtable2.desc2"
         ],
         "order_by": ["desc1"]
      },	 
      {
         "text": "First Attack",
         "type": "graph",
         "format": "time_series",
         "value": [  
                     "(now() - interval '5 hours' + (ROW_NUMBER() OVER(ORDER BY  subtable.tick_rounded)) * interval '1 minutes') as \"time\",",                   
                     "COUNT(subtable.time_stamp) as count_of_time_stamp"
                  ],
         "group_by": ["subtable.tick_rounded"],
         "table": [
                     "(",
                     " SELECT ",
                     "ROUND(tick/1200,0) as tick_rounded, ",
                     "time_stamp ",
                     "FROM ",
                     "logic_capital_first_damage",
                     ") as subtable"                    
                  ]
      },
      {
         "text": "First Attack Avg Time by Map Name",
         "type": "graph",
         "format": "time_series",
         "value": [  
                     "now() as \"time\",",
                     "AVG(tick/1200)  as min_tick_minutes, ",
                     "maps.name"
                  ],
         "group_by": ["maps.name"],
         "table": [
                     "logic_capital_first_damage ",
                     "LEFT JOIN pregame_skirmish_configuration ON ",
                        "pregame_skirmish_configuration.session_id = logic_capital_first_damage.session_id AND ",
                        "pregame_skirmish_configuration.general_sessionid = logic_capital_first_damage.sessionid ",
                     "RIGHT JOIN maps ON ",
                        "pregame_skirmish_configuration.general_map = maps.map_id ",
                     "WHERE ",
                        "maps.map_id IS NOT NULL AND logic_capital_first_damage.tick IS NOT NULL "                    
                  ]
      }, 	  	  
      {
         "text": "First Attack Min Time by Map Name",
         "type": "graph",
         "format": "time_series",
         "value": [  
                     "now() as \"time\",",
                     "MIN(tick/1200)  as min_tick_minutes, ",
                     "maps.name"
                  ],
         "group_by": ["maps.name"],
         "table": [
                     "logic_capital_first_damage ",
                     "LEFT JOIN pregame_skirmish_configuration ON ",
                        "pregame_skirmish_configuration.session_id = logic_capital_first_damage.session_id AND ",
                        "pregame_skirmish_configuration.general_sessionid = logic_capital_first_damage.sessionid ",
                     "RIGHT JOIN maps ON ",
                        "pregame_skirmish_configuration.general_map = maps.map_id ",
                     "WHERE ",
                        "maps.map_id IS NOT NULL AND logic_capital_first_damage.tick IS NOT NULL "                    
                  ]
      }, 
      {
         "text": "Game End Win",
         "type": "graph",
         "format": "time_series",
         "value": [  
                     "(now() - interval '5 hours' + (ROW_NUMBER() OVER(ORDER BY  subtable.tick_rounded)) * interval '1 minutes') as \"time\",",                   
                     "COUNT(subtable.time_stamp) as count_of_time_stamp"
                  ],
         "group_by": ["subtable.tick_rounded"],
         "table": [
                     "(",
                     " SELECT ",
                     "ROUND(basic_tick/1200,0) as tick_rounded, ",
                     "time_stamp ",
                     "FROM ",
                     "logic_condition_win",
                     ") as subtable"                    
                  ]
      },
      {
         "text": "Game End Win Avg Time by Map",
         "type": "graph",
         "format": "time_series",
         "value": [  
                     "now() as \"time\",",
                     "AVG(basic_tick/1200)  as min_tick_minutes, ",
                     "maps.name"
                  ],
         "group_by": ["maps.name"],
         "table": [
                     "logic_condition_win ",
                     "LEFT JOIN pregame_skirmish_configuration ON ",
                        "pregame_skirmish_configuration.session_id = logic_condition_win.session_id AND ",
                        "pregame_skirmish_configuration.general_sessionid = logic_condition_win.basic_sessionid ",
                     "RIGHT JOIN maps ON ",
                        "pregame_skirmish_configuration.general_map = maps.map_id ",
                     "WHERE ",
                        "maps.map_id IS NOT NULL AND logic_condition_win.basic_tick IS NOT NULL "                    
                  ]
      },
      {
         "text": "Game End Win Avg Time by Race",
         "type": "graph",
         "format": "time_series",
         "value": [  
                     "now() as \"time\",",
                     "AVG(basic_tick/1200) as min_tick_minutes, ",
                     "pregame_skirmish_faction.race"
                  ],
         "group_by": ["pregame_skirmish_faction.race"],
         "table": [
                     "logic_condition_win ",
                     "LEFT JOIN pregame_skirmish_faction ON ",
                        "pregame_skirmish_faction.session_id = logic_condition_win.session_id AND ",
                        "pregame_skirmish_faction.sessionid = logic_condition_win.basic_sessionid ",
                     "WHERE",
	                     "pregame_skirmish_faction.race IS NOT NULL"
                  ]
      },
		{
         "text": "Game End Win Min Time by Map",
         "type": "graph",
         "format": "time_series",
         "value": [  
                     "now() as \"time\",",
                     "MIN(basic_tick/1200)  as min_tick_minutes, ",
                     "maps.name"
                  ],
         "group_by": ["maps.name"],
         "table": [
                     "logic_condition_win ",
                     "LEFT JOIN pregame_skirmish_configuration ON ",
                        "pregame_skirmish_configuration.session_id = logic_condition_win.session_id AND ",
                        "pregame_skirmish_configuration.general_sessionid = logic_condition_win.basic_sessionid ",
                     "RIGHT JOIN maps ON ",
                        "pregame_skirmish_configuration.general_map = maps.map_id ",
                     "WHERE ",
                        "maps.map_id IS NOT NULL AND logic_condition_win.basic_tick IS NOT NULL "                    
                  ]
      },
      {
         "text": "Game End Win Min Time by Race",
         "type": "graph",
         "format": "time_series",
         "value": [  
                     "now() as \"time\",",
                     "MIN(basic_tick/1200) as min_tick_minutes, ",
                     "pregame_skirmish_faction.race"
                  ],
         "group_by": ["pregame_skirmish_faction.race"],
         "table": [
                     "logic_condition_win ",
                     "LEFT JOIN pregame_skirmish_faction ON ",
                        "pregame_skirmish_faction.session_id = logic_condition_win.session_id AND ",
                        "pregame_skirmish_faction.sessionid = logic_condition_win.basic_sessionid ",
                     "WHERE",
	                     "pregame_skirmish_faction.race IS NOT NULL"
                  ]
      }, 
      {
         "text": "Games",
         "type": "graph",
         "format": "table",
         "value": [
                     "general_revision,",
                     "COUNT(*)"
                  ],
         "table": [
                     "pregame_skirmish_configuration"
         ],
         "group_by": ["general_revision"]
      },	  
      {
         "text": "Games Played",
         "type": "graph",
         "format": "table",
         "value": [
            "general_revision,",
	         "COUNT(*) as count_of_general_revision"
         ],
         "table": [ 
            "pregame_skirmish_configuration",
            "GROUP BY",
               "general_revision"               
         ],
         "order_by": ["general_revision"]
      },
      {
         "text": "Games Played: Race Combinations singleplayer ",
         "type": "graph",
         "format": "table",
         "value": [
            "subtable_win.race,",
            "subtable_win.win_count as \"games won\",",
            "subtable_lose.lose_count as \"games lost\",",
            "ROUND((CAST(subtable_win.win_count as decimal) / (subtable_lose.lose_count + subtable_win.win_count)), 2) as \"win rate singleplayer\""
         ],
         "table": [ 
            "(",
            "SELECT",
               "pregame_skirmish_faction.race as race,",
               "COUNT(pregame_skirmish_faction.race) as win_count",
            "FROM (",
               "SELECT", 
                  "subtable1.session_id as session_id,", 
                  "subtable1.sessionid as sessionid,",
                  "logic_condition_win.basic_faction as basic_faction",
               "FROM (",
                  "SELECT",
                     "COUNT(*) as number_of_players,",
                     "session_id,", 
                     "sessionid",
                  "FROM",
                     "pregame_skirmish_faction",
                  "GROUP BY",
                     "session_id,", 
                     "sessionid",
                  "ORDER BY",
                     "pregame_skirmish_faction.session_id,",
                     "pregame_skirmish_faction.sessionid",
                  ") as subtable1",
               "LEFT JOIN",
                  "logic_condition_win ON",
                     "subtable1.session_id = logic_condition_win.session_id AND",
                     "subtable1.sessionid = logic_condition_win.basic_sessionid",
               "WHERE", 
                  "subtable1.number_of_players = 1 AND logic_condition_win IS NOT NULL",
               ") as subtable2",
            "INNER JOIN",
               "pregame_skirmish_faction ON",
               "subtable2.session_id = pregame_skirmish_faction.session_id AND",
               "subtable2.sessionid = pregame_skirmish_faction.sessionid AND",
               "subtable2.basic_faction = pregame_skirmish_faction.faction",
            "GROUP BY",
               "pregame_skirmish_faction.race",
               ") as subtable_win",
         "INNER JOIN",
            "(",
            "SELECT",
               "pregame_skirmish_faction.race,",
               "COUNT(pregame_skirmish_faction.race) as lose_count",
            "FROM (",               
               "SELECT", 
                  "subtable1.session_id as session_id,",
                  "subtable1.sessionid as sessionid,",
                  "logic_condition_lose.basic_faction as basic_faction",
               "FROM (",
                  "SELECT",
                     "COUNT(*) as number_of_players,",
                     "session_id,", 
                     "sessionid",
                  "FROM",
                     "pregame_skirmish_faction",
                  "GROUP BY",
                     "session_id,",
                     "sessionid",
                  "ORDER BY",
                     "pregame_skirmish_faction.session_id,",
                     "pregame_skirmish_faction.sessionid",
                  ") as subtable1",
               "LEFT JOIN",
                  "logic_condition_lose ON",
                     "subtable1.session_id = logic_condition_lose.session_id AND",
                     "subtable1.sessionid = logic_condition_lose.basic_sessionid",
               "WHERE", 
                  "subtable1.number_of_players = 1 AND logic_condition_lose IS NOT NULL",
               ") as subtable2",
            "INNER JOIN",
               "pregame_skirmish_faction ON",
               "subtable2.session_id = pregame_skirmish_faction.session_id AND",
               "subtable2.sessionid = pregame_skirmish_faction.sessionid AND",
               "subtable2.basic_faction = pregame_skirmish_faction.faction",
            "GROUP BY",
               "pregame_skirmish_faction.race",	
            ")as subtable_lose ON",
            "subtable_win.race = subtable_lose.race"           
         ]     
      },      
      {
         "text": "Games Played: Race Combinations 1v1 ",
         "type": "graph",
         "format": "table",
         "value": [
            "subtable4.race_opponent as \"race, opponent race\",",
            "subtable4.games_won as \"games won\",",
            "subtable5.games_lost as \"games lost\",",
            "ROUND((CAST(subtable4.games_won as decimal) / (subtable4.games_won + subtable5.games_lost)), 2) as \"win rate 1v1\""
         ],
         "table": [ 
            "(",
            "SELECT",
               "(race, subtable3.lose_race)  as race_opponent,",
               "COUNT(*) as games_won",
            "FROM",
               "pregame_skirmish_faction",
            "INNER JOIN",
               "(",
               "SELECT",
                  "subtable1.session_id,",
                  "subtable1.sessionid,",
                  "logic_condition_win.basic_faction as win_faction",
               "FROM",
                  "(",
                  "SELECT",
                     "COUNT(*) as number_of_players,",
                     "session_id, ",
                     "sessionid",
                  "FROM",
                     "pregame_skirmish_faction",
                  "WHERE", 
                     "pregame_skirmish_faction.ai = 0",
                  "GROUP BY",
                     "session_id, ",
                     "sessionid",
                  "ORDER BY",
                     "pregame_skirmish_faction.session_id,",
                     "pregame_skirmish_faction.sessionid",
                  ") as subtable1",
               "LEFT JOIN",
                  "logic_condition_win ON",
                     "subtable1.session_id = logic_condition_win.session_id AND",
                     "subtable1.sessionid = logic_condition_win.basic_sessionid",
               "WHERE",
                  "subtable1.number_of_players = 2 AND logic_condition_win.basic_faction IS NOT NULL",
               ") as subtable2 ON",
                  "pregame_skirmish_faction.session_id = subtable2.session_id AND",
                  "pregame_skirmish_faction.sessionid = subtable2.sessionid AND",
                  "pregame_skirmish_faction.faction = subtable2.win_faction",
            "LEFT JOIN",
               "(",
               "SELECT",
                  "race as lose_race,",
                  "pregame_skirmish_faction.session_id,",
                  "pregame_skirmish_faction.sessionid,",
                  "pregame_skirmish_faction.faction",
               "FROM",
                  "pregame_skirmish_faction",
               "INNER JOIN",
                  "(",
                  "SELECT",
                     "subtable1.session_id,",
                     "subtable1.sessionid,",
                     "logic_condition_lose.basic_faction as lose_faction",
                  "FROM",
                     "(",
                     "SELECT",
                        "COUNT(*) as number_of_players,",
                        "session_id, ",
                        "sessionid",
                     "FROM",
                        "pregame_skirmish_faction",
                     "WHERE", 
                        "pregame_skirmish_faction.ai = 0",                        
                     "GROUP BY",
                        "session_id, ",
                        "sessionid",
                     "ORDER BY",
                        "pregame_skirmish_faction.session_id,",
                        "pregame_skirmish_faction.sessionid",
                     ") as subtable1",
                  "LEFT JOIN",
                     "logic_condition_lose ON",
                        "subtable1.session_id = logic_condition_lose.session_id AND",
                        "subtable1.sessionid = logic_condition_lose.basic_sessionid",
                  "WHERE",
                     "subtable1.number_of_players = 2 AND logic_condition_lose.basic_faction IS NOT NULL",
                  ") as subtable2 ON",
                     "pregame_skirmish_faction.session_id = subtable2.session_id AND",
                     "pregame_skirmish_faction.sessionid = subtable2.sessionid AND",
                     "pregame_skirmish_faction.faction = subtable2.lose_faction",
               ") as subtable3 ON",
                     "pregame_skirmish_faction.session_id = subtable3.session_id AND",
                     "pregame_skirmish_faction.sessionid = subtable3. sessionid",
            "WHERE",
               "race <> subtable3.lose_race",
            "GROUP BY",
               "(race, subtable3.lose_race)",
            ") as subtable4",
         "LEFT JOIN",
            "(",
            "SELECT", 
               "(race, subtable3.win_race)  as race_opponent,",
               "COUNT(*) as games_lost",
            "FROM",
               "pregame_skirmish_faction",
            "INNER JOIN",
               "(",
               "SELECT",
                  "subtable1.session_id as session_id,",
                  "subtable1.sessionid as sessionid,",
                  "logic_condition_lose.basic_faction as basic_faction",
               "FROM",
                  "(",
                  "SELECT",
                     "COUNT(*) as number_of_players,",
                     "session_id,", 
                     "sessionid",
                  "FROM",
                     "pregame_skirmish_faction",
                  "WHERE", 
                     "pregame_skirmish_faction.ai = 0",                     
                  "GROUP BY",
                     "session_id,", 
                     "sessionid",
                  "ORDER BY",
                     "pregame_skirmish_faction.session_id,",
                     "pregame_skirmish_faction.sessionid",
                  ") as subtable1",
               "LEFT JOIN",
                  "logic_condition_lose ON",
                     "subtable1.session_id = logic_condition_lose.session_id AND",
                     "subtable1.sessionid = logic_condition_lose.basic_sessionid",
               "WHERE",
                  "subtable1.number_of_players = 2 AND logic_condition_lose.basic_faction IS NOT NULL",
               ") as subtable2 ON",
                  "pregame_skirmish_faction.faction = subtable2.basic_faction AND",
                  "pregame_skirmish_faction.session_id = subtable2.session_id AND",
                  "pregame_skirmish_faction.sessionid = subtable2.sessionid",    
            "LEFT JOIN",
               "(",
               "SELECT",
                  "race as win_race,",
                  "pregame_skirmish_faction.session_id,",
                  "pregame_skirmish_faction.sessionid,",
                  "pregame_skirmish_faction.faction",
               "FROM",
                  "pregame_skirmish_faction",
               "INNER JOIN",
                  "(",
                  "SELECT",
                     "subtable1.session_id,",
                     "subtable1.sessionid,",
                     "logic_condition_win.basic_faction as win_faction",
                  "FROM",
                     "(",
                     "SELECT",
                        "COUNT(*) as number_of_players,",
                        "session_id,",
                        "sessionid",
                     "FROM",
                        "pregame_skirmish_faction",
                     "WHERE", 
                        "pregame_skirmish_faction.ai = 0",                        
                     "GROUP BY",
                        "session_id,", 
                        "sessionid",
                     "ORDER BY",
                        "pregame_skirmish_faction.session_id,",
                        "pregame_skirmish_faction.sessionid",
                     ") as subtable1",
                  "LEFT JOIN",
                     "logic_condition_win ON",
                        "subtable1.session_id = logic_condition_win.session_id AND",
                        "subtable1.sessionid = logic_condition_win.basic_sessionid",
                  "WHERE", 
                     "subtable1.number_of_players = 2 AND logic_condition_win.basic_faction IS NOT NULL",
                  ") as subtable2 ON",
                     "pregame_skirmish_faction.session_id = subtable2.session_id AND",
                     "pregame_skirmish_faction.sessionid = subtable2.sessionid AND",
                     "pregame_skirmish_faction.faction = subtable2.win_faction",
               ") as subtable3 ON",
                     "pregame_skirmish_faction.session_id = subtable3.session_id AND",
                     "pregame_skirmish_faction.sessionid = subtable3.sessionid",
            "WHERE",
               "race <> subtable3.win_race",
            "GROUP BY",
               "(race, subtable3.win_race)",
            ") as subtable5 ON",
               "subtable5.race_opponent = subtable4.race_opponent",
            "WHERE",
               "subtable5.games_lost IS NOT NULL AND ",
               "subtable4.games_won IS NOT NULL"
         ]     
      },
      {
         "text": "Games Played: Race Combinations 2v2 ",
         "type": "graph",
         "format": "table",
         "value": [
            "subtable4.race_opponent as \"race, opponent race\",",
            "subtable4.games_won as \"games won\",",
            "subtable5.games_lost as \"games lost\",",
            "ROUND((CAST(subtable4.games_won as decimal) / (subtable4.games_won + subtable5.games_lost)), 2) as \"win rate 2v2\""
         ],
         "table": [ 
            "(",
            "SELECT",
               "(race, subtable3.lose_race)  as race_opponent,",
               "COUNT(*) as games_won",
            "FROM",
               "pregame_skirmish_faction",
            "INNER JOIN",
               "(",
               "SELECT",
                  "subtable1.session_id,",
                  "subtable1.sessionid,",
                  "logic_condition_win.basic_faction as win_faction",
               "FROM",
                  "(",
                  "SELECT",
                     "COUNT(*) as number_of_players,",
                     "session_id, ",
                     "sessionid",
                  "FROM",
                     "pregame_skirmish_faction",
                  "WHERE", 
                     "pregame_skirmish_faction.ai = 0",                     
                  "GROUP BY",
                     "session_id, ",
                     "sessionid",
                  "ORDER BY",
                     "pregame_skirmish_faction.session_id,",
                     "pregame_skirmish_faction.sessionid",
                  ") as subtable1",
               "LEFT JOIN",
                  "logic_condition_win ON",
                     "subtable1.session_id = logic_condition_win.session_id AND",
                     "subtable1.sessionid = logic_condition_win.basic_sessionid",
               "WHERE",
                  "subtable1.number_of_players = 4 AND logic_condition_win.basic_faction IS NOT NULL",
               ") as subtable2 ON",
                  "pregame_skirmish_faction.session_id = subtable2.session_id AND",
                  "pregame_skirmish_faction.sessionid = subtable2.sessionid AND",
                  "pregame_skirmish_faction.faction = subtable2.win_faction",
            "LEFT JOIN",
               "(",
               "SELECT",
                  "race as lose_race,",
                  "pregame_skirmish_faction.session_id,",
                  "pregame_skirmish_faction.sessionid,",
                  "pregame_skirmish_faction.faction",
               "FROM",
                  "pregame_skirmish_faction",
               "INNER JOIN",
                  "(",
                  "SELECT",
                     "subtable1.session_id,",
                     "subtable1.sessionid,",
                     "logic_condition_lose.basic_faction as lose_faction",
                  "FROM",
                     "(",
                     "SELECT",
                        "COUNT(*) as number_of_players,",
                        "session_id, ",
                        "sessionid",
                     "FROM",
                        "pregame_skirmish_faction",
                     "WHERE", 
                        "pregame_skirmish_faction.ai = 0",                     
                     "GROUP BY",
                        "session_id, ",
                        "sessionid",
                     "ORDER BY",
                        "pregame_skirmish_faction.session_id,",
                        "pregame_skirmish_faction.sessionid",
                     ") as subtable1",
                  "LEFT JOIN",
                     "logic_condition_lose ON",
                        "subtable1.session_id = logic_condition_lose.session_id AND",
                        "subtable1.sessionid = logic_condition_lose.basic_sessionid",
                  "WHERE",
                     "subtable1.number_of_players = 4 AND logic_condition_lose.basic_faction IS NOT NULL",
                  ") as subtable2 ON",
                     "pregame_skirmish_faction.session_id = subtable2.session_id AND",
                     "pregame_skirmish_faction.sessionid = subtable2.sessionid AND",
                     "pregame_skirmish_faction.faction = subtable2.lose_faction",
               ") as subtable3 ON",
                     "pregame_skirmish_faction.session_id = subtable3.session_id AND",
                     "pregame_skirmish_faction.sessionid = subtable3. sessionid",
            "WHERE",
               "race <> subtable3.lose_race",
            "GROUP BY",
               "(race, subtable3.lose_race)",
            ") as subtable4",
         "LEFT JOIN",
            "(",
            "SELECT", 
               "(race, subtable3.win_race)  as race_opponent,",
               "COUNT(*) as games_lost",
            "FROM",
               "pregame_skirmish_faction",
            "INNER JOIN",
               "(",
               "SELECT",
                  "subtable1.session_id as session_id,",
                  "subtable1.sessionid as sessionid,",
                  "logic_condition_lose.basic_faction as basic_faction",
               "FROM",
                  "(",
                  "SELECT",
                     "COUNT(*) as number_of_players,",
                     "session_id,", 
                     "sessionid",
                  "FROM",
                     "pregame_skirmish_faction",
                  "WHERE", 
                     "pregame_skirmish_faction.ai = 0",                     
                  "GROUP BY",
                     "session_id,", 
                     "sessionid",
                  "ORDER BY",
                     "pregame_skirmish_faction.session_id,",
                     "pregame_skirmish_faction.sessionid",
                  ") as subtable1",
               "LEFT JOIN",
                  "logic_condition_lose ON",
                     "subtable1.session_id = logic_condition_lose.session_id AND",
                     "subtable1.sessionid = logic_condition_lose.basic_sessionid",
               "WHERE",
                  "subtable1.number_of_players = 4 AND logic_condition_lose.basic_faction IS NOT NULL",
               ") as subtable2 ON",
                  "pregame_skirmish_faction.faction = subtable2.basic_faction AND",
                  "pregame_skirmish_faction.session_id = subtable2.session_id AND",
                  "pregame_skirmish_faction.sessionid = subtable2.sessionid",    
            "LEFT JOIN",
               "(",
               "SELECT",
                  "race as win_race,",
                  "pregame_skirmish_faction.session_id,",
                  "pregame_skirmish_faction.sessionid,",
                  "pregame_skirmish_faction.faction",
               "FROM",
                  "pregame_skirmish_faction",
               "INNER JOIN",
                  "(",
                  "SELECT",
                     "subtable1.session_id,",
                     "subtable1.sessionid,",
                     "logic_condition_win.basic_faction as win_faction",
                  "FROM",
                     "(",
                     "SELECT",
                        "COUNT(*) as number_of_players,",
                        "session_id,",
                        "sessionid",
                     "FROM",
                        "pregame_skirmish_faction",
                     "WHERE", 
                        "pregame_skirmish_faction.ai = 0",
                     "GROUP BY",
                        "session_id,", 
                        "sessionid",
                     "ORDER BY",
                        "pregame_skirmish_faction.session_id,",
                        "pregame_skirmish_faction.sessionid",
                     ") as subtable1",
                  "LEFT JOIN",
                     "logic_condition_win ON",
                        "subtable1.session_id = logic_condition_win.session_id AND",
                        "subtable1.sessionid = logic_condition_win.basic_sessionid",
                  "WHERE", 
                     "subtable1.number_of_players = 4 AND logic_condition_win.basic_faction IS NOT NULL",
                  ") as subtable2 ON",
                     "pregame_skirmish_faction.session_id = subtable2.session_id AND",
                     "pregame_skirmish_faction.sessionid = subtable2.sessionid AND",
                     "pregame_skirmish_faction.faction = subtable2.win_faction",
               ") as subtable3 ON",
                     "pregame_skirmish_faction.session_id = subtable3.session_id AND",
                     "pregame_skirmish_faction.sessionid = subtable3.sessionid",
            "WHERE",
               "race <> subtable3.win_race",
            "GROUP BY",
               "(race, subtable3.win_race)",
            ") as subtable5 ON",
               "subtable5.race_opponent = subtable4.race_opponent",
            "WHERE",
               "subtable5.games_lost IS NOT NULL AND ",
               "subtable4.games_won IS NOT NULL"
         ]     
      },
      {
         "text": "Games Played: Race Combinations 3v3 ",
         "type": "graph",
         "format": "table",
         "value": [
            "subtable4.race_opponent as \"race, opponent race\",",
            "subtable4.games_won as \"games won\",",
            "subtable5.games_lost as \"games lost\",",
            "ROUND((CAST(subtable4.games_won as decimal) / (subtable4.games_won + subtable5.games_lost)), 2) as \"win rate 3v3\""
         ],
         "table": [ 
            "(",
            "SELECT",
               "(race, subtable3.lose_race)  as race_opponent,",
               "COUNT(*) as games_won",
            "FROM",
               "pregame_skirmish_faction",
            "INNER JOIN",
               "(",
               "SELECT",
                  "subtable1.session_id,",
                  "subtable1.sessionid,",
                  "logic_condition_win.basic_faction as win_faction",
               "FROM",
                  "(",
                  "SELECT",
                     "COUNT(*) as number_of_players,",
                     "session_id, ",
                     "sessionid",
                  "FROM",
                     "pregame_skirmish_faction",
                  "WHERE", 
                     "pregame_skirmish_faction.ai = 0",                     
                  "GROUP BY",
                     "session_id, ",
                     "sessionid",
                  "ORDER BY",
                     "pregame_skirmish_faction.session_id,",
                     "pregame_skirmish_faction.sessionid",
                  ") as subtable1",
               "LEFT JOIN",
                  "logic_condition_win ON",
                     "subtable1.session_id = logic_condition_win.session_id AND",
                     "subtable1.sessionid = logic_condition_win.basic_sessionid",
               "WHERE",
                  "subtable1.number_of_players = 6 AND logic_condition_win.basic_faction IS NOT NULL",
               ") as subtable2 ON",
                  "pregame_skirmish_faction.session_id = subtable2.session_id AND",
                  "pregame_skirmish_faction.sessionid = subtable2.sessionid AND",
                  "pregame_skirmish_faction.faction = subtable2.win_faction",
            "LEFT JOIN",
               "(",
               "SELECT",
                  "race as lose_race,",
                  "pregame_skirmish_faction.session_id,",
                  "pregame_skirmish_faction.sessionid,",
                  "pregame_skirmish_faction.faction",
               "FROM",
                  "pregame_skirmish_faction",
               "INNER JOIN",
                  "(",
                  "SELECT",
                     "subtable1.session_id,",
                     "subtable1.sessionid,",
                     "logic_condition_lose.basic_faction as lose_faction",
                  "FROM",
                     "(",
                     "SELECT",
                        "COUNT(*) as number_of_players,",
                        "session_id, ",
                        "sessionid",
                     "FROM",
                        "pregame_skirmish_faction",
                     "WHERE", 
                        "pregame_skirmish_faction.ai = 0",                        
                     "GROUP BY",
                        "session_id, ",
                        "sessionid",
                     "ORDER BY",
                        "pregame_skirmish_faction.session_id,",
                        "pregame_skirmish_faction.sessionid",
                     ") as subtable1",
                  "LEFT JOIN",
                     "logic_condition_lose ON",
                        "subtable1.session_id = logic_condition_lose.session_id AND",
                        "subtable1.sessionid = logic_condition_lose.basic_sessionid",
                  "WHERE",
                     "subtable1.number_of_players = 6 AND logic_condition_lose.basic_faction IS NOT NULL",
                  ") as subtable2 ON",
                     "pregame_skirmish_faction.session_id = subtable2.session_id AND",
                     "pregame_skirmish_faction.sessionid = subtable2.sessionid AND",
                     "pregame_skirmish_faction.faction = subtable2.lose_faction",
               ") as subtable3 ON",
                     "pregame_skirmish_faction.session_id = subtable3.session_id AND",
                     "pregame_skirmish_faction.sessionid = subtable3. sessionid",
            "WHERE",
               "race <> subtable3.lose_race",
            "GROUP BY",
               "(race, subtable3.lose_race)",
            ") as subtable4",
         "LEFT JOIN",
            "(",
            "SELECT", 
               "(race, subtable3.win_race)  as race_opponent,",
               "COUNT(*) as games_lost",
            "FROM",
               "pregame_skirmish_faction",
            "INNER JOIN",
               "(",
               "SELECT",
                  "subtable1.session_id as session_id,",
                  "subtable1.sessionid as sessionid,",
                  "logic_condition_lose.basic_faction as basic_faction",
               "FROM",
                  "(",
                  "SELECT",
                     "COUNT(*) as number_of_players,",
                     "session_id,", 
                     "sessionid",
                  "FROM",
                     "pregame_skirmish_faction",
                  "WHERE", 
                     "pregame_skirmish_faction.ai = 0",                     
                  "GROUP BY",
                     "session_id,", 
                     "sessionid",
                  "ORDER BY",
                     "pregame_skirmish_faction.session_id,",
                     "pregame_skirmish_faction.sessionid",
                  ") as subtable1",
               "LEFT JOIN",
                  "logic_condition_lose ON",
                     "subtable1.session_id = logic_condition_lose.session_id AND",
                     "subtable1.sessionid = logic_condition_lose.basic_sessionid",
               "WHERE",
                  "subtable1.number_of_players = 6 AND logic_condition_lose.basic_faction IS NOT NULL",
               ") as subtable2 ON",
                  "pregame_skirmish_faction.faction = subtable2.basic_faction AND",
                  "pregame_skirmish_faction.session_id = subtable2.session_id AND",
                  "pregame_skirmish_faction.sessionid = subtable2.sessionid",    
            "LEFT JOIN",
               "(",
               "SELECT",
                  "race as win_race,",
                  "pregame_skirmish_faction.session_id,",
                  "pregame_skirmish_faction.sessionid,",
                  "pregame_skirmish_faction.faction",
               "FROM",
                  "pregame_skirmish_faction",
               "INNER JOIN",
                  "(",
                  "SELECT",
                     "subtable1.session_id,",
                     "subtable1.sessionid,",
                     "logic_condition_win.basic_faction as win_faction",
                  "FROM",
                     "(",
                     "SELECT",
                        "COUNT(*) as number_of_players,",
                        "session_id,",
                        "sessionid",
                     "FROM",
                        "pregame_skirmish_faction",
                     "WHERE", 
                        "pregame_skirmish_faction.ai = 0",                        
                     "GROUP BY",
                        "session_id,", 
                        "sessionid",
                     "ORDER BY",
                        "pregame_skirmish_faction.session_id,",
                        "pregame_skirmish_faction.sessionid",
                     ") as subtable1",
                  "LEFT JOIN",
                     "logic_condition_win ON",
                        "subtable1.session_id = logic_condition_win.session_id AND",
                        "subtable1.sessionid = logic_condition_win.basic_sessionid",
                  "WHERE", 
                     "subtable1.number_of_players = 6 AND logic_condition_win.basic_faction IS NOT NULL",
                  ") as subtable2 ON",
                     "pregame_skirmish_faction.session_id = subtable2.session_id AND",
                     "pregame_skirmish_faction.sessionid = subtable2.sessionid AND",
                     "pregame_skirmish_faction.faction = subtable2.win_faction",
               ") as subtable3 ON",
                     "pregame_skirmish_faction.session_id = subtable3.session_id AND",
                     "pregame_skirmish_faction.sessionid = subtable3.sessionid",
            "WHERE",
               "race <> subtable3.win_race",
            "GROUP BY",
               "(race, subtable3.win_race)",
            ") as subtable5 ON",
               "subtable5.race_opponent = subtable4.race_opponent",
            "WHERE",
               "subtable5.games_lost IS NOT NULL AND ",
               "subtable4.games_won IS NOT NULL"
         ]     
      },                  
      {
         "text": "Gold Gathered Over Time",
         "type": "graph",
         "format": "time_series",
         "value": [  
                     "(now() - interval '5 hours' + (ROW_NUMBER() OVER(ORDER BY  basic_tick/1200)) * interval '1 minutes') as \"time\",",                   
                     "(SUM(gold_gathered) / (SELECT COUNT(*) FROM pregame_skirmish_configuration)) as __name"
                  ],
         "group_by": ["basic_tick"],
         "order_by": ["basic_tick"],
         "table": [
            "logic_hero_gold",
            " LEFT JOIN ",
            "pregame_skirmish_faction ON",
            "pregame_skirmish_faction.session_id = logic_hero_gold.session_id AND ",
            "pregame_skirmish_faction.sessionid = logic_hero_gold.basic_sessionid AND ",
            "pregame_skirmish_faction.faction = logic_hero_gold.basic_faction",
            " RIGHT JOIN ",
            "pregame_skirmish_configuration ON",
            "pregame_skirmish_faction.session_id = pregame_skirmish_configuration.session_id AND ",
            "pregame_skirmish_faction.sessionid = pregame_skirmish_configuration.general_sessionid"                    
         ],
         "use_table_constraints": "logic_hero_gold",
         "constraints": {
            "database": [
               {
                  "template": "general_map",
                  "html_input": "dropdown_db_1" 
               }
            ]
         }
      },	  
      {
         "text": "Hero Ability Unlock",
         "type": "graph",
         "format": "table",
         "value": [  
                     "logic_hero_ability_unlock.descid,",                   
                     "COUNT(logic_hero_ability_unlock.descid)"
                  ],
         "group_by": [
                        "logic_hero_ability_unlock.descid",
                        "abilities_lookup.hero_type"
                     ],
         "order_by": ["logic_hero_ability_unlock.descid"],
         "table": [
                     "logic_hero_ability_unlock",
                     " LEFT JOIN ",
                        "abilities_lookup ON ",
                        "abilities_lookup.descid = logic_hero_ability_unlock.descid"
                  ],
         "not_null": ["abilities_lookup.descid"],
         "constraints": {
            "database": [
               {
                  "template": "hero_type",
                  "html_input": "dropdown_db_0"
               }
            ]
         }
      },
      {
         "text": "Hero Death",
         "type": "graph",
         "format": "time_series",
         "value": [
                     "(now() - interval '5 hours' + (ROW_NUMBER() OVER(ORDER BY subtable.tick_minutes)) * interval '1 minute') as \"time\",",                      
                     "COUNT(*) as \"count of id_hero\""
                  ],
         "group_by": [
                        "subtable.tick_minutes"
                     ],
         "order_by": ["\"time\""],
         "table": [
                     "(",
                     "SELECT",
                        "(session_id, basic_sessionid, basic_faction, creatureid ) as id_hero,",
                        "ROUND(basic_tick/1200,2) as tick_minutes",
                     "FROM logic_hero_death",
                     ") as subtable"
                  ]
      },
      {
         "text": "Maps Lookup Table",
         "type": "graph",
         "format": "table",
         "value": ["*"],
         "table": [
                     "Maps"
         ]
      },	  
	{
         "text": "Number of games",
         "type": "graph",
         "format": "table",
         "value": [ "COUNT (*)"],
         "table": ["sessions"]
      },
      {
         "text": "Number of games by map",
         "type": "graph",
         "format": "time_series",
         "value": [                                                            
                     "now() as \"time\",",
                     "COUNT (*),",
                     "maps.name"
                  ],
         "table": [ 
            "pregame_skirmish_configuration",
            " LEFT JOIN ",
               "maps ON ",
               "pregame_skirmish_configuration.general_map = maps.map_id",
            " WHERE ",
               "maps.name IS NOT NULL"
         ],
         "group_by": [ "maps.name" ]
      },
      {
         "text": "Number of items by name",
         "type": "graph",
         "format": "table",
         "value": [                                                            
                     "subtable.loot_count as loot_count,",
                     "logic_hero_item_looted.descid"
                  ],
         "table": [
            "logic_hero_item_looted",
            "RIGHT JOIN", 
            "(",
               "SELECT", 
                  "COUNT(*) as loot_count, ",
                  "descid",
               "FROM",
                  "logic_hero_item_looted",
               "WHERE",
                  "descid <> 'Gold'",                  
               "GROUP BY",
                  "descid",	
            ") as subtable ON",
            "subtable.descid = logic_hero_item_looted.descid",
            "LEFT JOIN pregame_skirmish_configuration ON",
               "pregame_skirmish_configuration.session_id = logic_hero_item_looted.session_id AND",
               "pregame_skirmish_configuration.general_sessionid = logic_hero_item_looted.basic_sessionid"
         ],
         "group_by": [
            "logic_hero_item_looted.descid",
            "subtable.loot_count"
         ],
         "use_table_constraints": "logic_hero_gold",
         "constraints": {
            "database": [
               {
                  "template": "general_map",
                  "html_input": "dropdown_db_1" 
               }
            ]
         }
      },
      {
         "text": "Race, count of race",
         "type": "graph",
         "format": "table",
         "value": [
               "COUNT(race) as count_race,",
               "race"
            ],
         "table": [
               "pregame_skirmish_faction",
            "GROUP BY",
               "race"
         ],
         "order_by": ["count_race"]
      },	  
      {
         "text": "Revival Runes",
         "type": "graph",
         "format": "time_series",
         "value": [
                     "(now() - interval '5 hours' + (ROW_NUMBER() OVER(ORDER BY subtable.tick_minutes)) * interval '1 minutes') as \"time\",", 
                     "ROUND(AVG(subtable.round_avg),2) as __name"
                  ],
         "nested_table": [
                     "SELECT",
                        "ROUND(AVG(amount),2) as round_avg,",
                        "ROUND(basic_tick/1200) as tick_minutes,",
                        "pregame_skirmish_configuration.general_map as general_map,",
                        "pregame_skirmish_faction.race as race",
                     "FROM logic_hero_revivalrunes_change",
                     "LEFT JOIN pregame_skirmish_configuration ON",
                        "pregame_skirmish_configuration.session_id = logic_hero_revivalrunes_change.session_id AND",
                        "pregame_skirmish_configuration.general_sessionid = logic_hero_revivalrunes_change.basic_sessionid",
                     "RIGHT JOIN pregame_skirmish_faction ON",
                        "pregame_skirmish_faction.session_id = logic_hero_revivalrunes_change.session_id AND",
                        "pregame_skirmish_faction.sessionid = logic_hero_revivalrunes_change.basic_sessionid AND",
                        "pregame_skirmish_faction.faction = logic_hero_revivalrunes_change.basic_faction"
                  ],
         "nested_as": "subtable",
         "nested_group_by": ["tick_minutes", "race", "general_map"],
         "nested_constraints": {
            "database": [
               {
                  "template": "race",
                  "html_input": "dropdown_db_0"
               },
               {
                  "template": "general_map",
                  "html_input": "dropdown_db_1"                  
               }
            ]
         },
         "not_null": [
            "subtable.round_avg",
            "subtable.tick_minutes"
         ],
         "group_by": ["subtable.tick_minutes"]
      },
      {
         "text": "Session count by date",
         "type": "graph",
         "format": "table",
         "value": [
            "DATE(start) as \"date\", COUNT(start)"
         ],
         "table": ["sessions GROUP BY DATE(start)"]
      },
      {
         "text": "Stone Harvested",
         "type": "graph",
         "format": "time_series",
         "value": [  
                     "(now() - interval '5 hours' + (ROW_NUMBER() OVER(ORDER BY  basic_tick/1200)) * interval '1 minutes') as \"time\",",                   
                     "COUNT(resources_bricks) as __name"
                  ],
         "group_by": ["basic_tick"],
         "order_by": ["basic_tick"],
         "table": [
                     "logic_resources_harvested",
                     " LEFT JOIN ",
                     "pregame_skirmish_faction ON",
                     "pregame_skirmish_faction.session_id = logic_resources_harvested.session_id AND ",
                     "pregame_skirmish_faction.sessionid = logic_resources_harvested.basic_sessionid AND ",
                     "pregame_skirmish_faction.faction = logic_resources_harvested.basic_faction",
                     " RIGHT JOIN ",
                     "pregame_skirmish_configuration ON",
                     "pregame_skirmish_faction.session_id = pregame_skirmish_configuration.session_id AND ",
                     "pregame_skirmish_faction.sessionid = pregame_skirmish_configuration.general_sessionid"                    
                  ],
         "constraints": {
            "database": [
               {
                  "template": "race",
                  "html_input": "dropdown_db_0"
               },
               {
                  "template": "general_map",
                  "html_input": "dropdown_db_1" 
               }
            ]
         }
      },
      {
         "text": "Technologies Researched Descid Percent By Race",
         "type": "graph",
         "format": "table",
         "value": [   
            "ROUND((descid_1 / descid_sum ) * 100, 2) as __name,",
            "building_descid"
         ],
         "order_by": ["__name"],
         "nested_names": [
            "subtable1",
            "subtable2"
         ],
         "nested_table": {
            "subtable1": [
               "SELECT",
                  "CAST(COUNT(logic_production_upgrade.descid) AS DECIMAL) AS descid_1,",
                  "logic_production_upgrade.descid as building_descid",
               "FROM", 	
                  "logic_production_upgrade",
               "LEFT JOIN",
                  "pregame_skirmish_faction ON",
                     "logic_production_upgrade.session_id = pregame_skirmish_faction.session_id AND",
                     "logic_production_upgrade.basic_sessionid = pregame_skirmish_faction.sessionid AND",
                     "logic_production_upgrade.basic_faction = pregame_skirmish_faction.faction"
            ],
            "subtable2": [
               "SELECT",
                  "COUNT(logic_production_upgrade.descid) AS descid_sum",
               "FROM", 	
                  "logic_production_upgrade",
               "LEFT JOIN",
                  "pregame_skirmish_faction ON",
                     "logic_production_upgrade.session_id = pregame_skirmish_faction.session_id AND",
                     "logic_production_upgrade.basic_sessionid = pregame_skirmish_faction.sessionid AND",
                     "logic_production_upgrade.basic_faction = pregame_skirmish_faction.faction"
            ]
         },
         "nested_group_by": {
            "subtable1": ["logic_production_upgrade.descid"]
         },
         "nested_constraints": {
            "subtable1": {
               "database": [
                  {
                     "template": "race",
                     "html_input": "dropdown_db_0" 
                  }
               ]
            },
            "subtable2": {
               "reference": "subtable1"
            }
         }
      },
      {
         "text": "Tiers",
         "type": "graph",
         "format": "time_series",
         "value": [
                     "(now() - interval '5 hours' + (ROW_NUMBER() OVER(ORDER BY  subtable.tick_rounded)) * interval '1 minutes') as \"time\",",
                     "COUNT(subtable.count_value)"
                  ],
         "table": [
                     "(",
                     "SELECT",
                        "ROUND(basic_tick/1200,2) as tick_rounded, ",
                        "1 as count_value ",
                     "FROM ", 
                        "logic_next_techlevel_reached ",
                        ") as subtable"
         ],
         "group_by": ["subtable.tick_rounded"]
      },	  
      {
         "text": "Units Built",
         "type": "graph",
         "format": "table",
         "value": [   
            "subtable1.faction as Race,",
            "subtable1.tier as Tier,", 
            "subtable1.descid as descid,", 
            "subtable1.group_size as group_size,",
            "subtable1.units_total as units_total,",
            "(subtable1.units_total / subtable1.group_size)  as sets_produced,",
            "ROUND(CAST((subtable1.units_total / subtable1.group_size) AS DECIMAL)/ subtable2.total_players, 2) as set_per_player,",
            "subtable2.total_players as total_players"
         ],
         "table": [
            "(",
            "SELECT",
               "units.faction as faction,",
               "units.tier as tier,",
               "logic_production_unit.descid as descid,",
               "units.group_size as group_size,",
               "COUNT(*) as units_total",			
            "FROM",
               "logic_production_unit",
            "LEFT JOIN",
               "units ON logic_production_unit.descid = units.creature_name",
            "WHERE",
               "units.group_size IS NOT NULL AND",
               "units.faction IS NOT NULL AND",
               "units.tier IS NOT NULL",
            "GROUP BY", 
               "logic_production_unit.descid,",
               "units.group_size,",
               "units.faction,",
               "units.tier",
         ") as subtable1",
      "LEFT JOIN",
         "(",
            "SELECT",
               "logic_production_unit.descid as descid,",
               "COUNT(*) as total_players",
            "FROM",
               "pregame_skirmish_faction",
            "LEFT JOIN",
               "logic_production_unit ON", 
                  "logic_production_unit.session_id = pregame_skirmish_faction.session_id AND",
                  "logic_production_unit.basic_sessionid = pregame_skirmish_faction.sessionid AND",
                  "logic_production_unit.basic_faction = pregame_skirmish_faction.faction",
            "GROUP BY",
               "logic_production_unit.descid",
            ") AS subtable2 ON",
               "subtable1.descid = subtable2.descid"
         ],
         "order_by": ["group_size"]   
      },
      {
         "text": "Units Built Sums",
         "type": "graph",
         "format": "table",
         "value": [
            "SUM(subtable1.units_total) as sum_units_total,",
            "SUM(subtable1.units_total / subtable1.group_size)  as sum_sets_produced,",
            "SUM(ROUND(CAST((subtable1.units_total / subtable1.group_size) AS DECIMAL)/ subtable2.total_players, 2)) as sum_set_per_player,",
            "SUM(subtable2.total_players) as sum_total_players"		
         ],
         "table": [
            "(",
               "SELECT",
                  "units.faction as faction,",
                  "units.tier as tier,",
                  "logic_production_unit.descid as descid,",
                  "units.group_size as group_size,",
                  "COUNT(*) as units_total",
               "FROM",
                  "logic_production_unit",
               "LEFT JOIN",
                  "units ON logic_production_unit.descid = units.creature_name",
               "WHERE",
                  "units.group_size IS NOT NULL AND",
                  "units.faction IS NOT NULL AND",
                  "units.tier IS NOT NULL",
               "GROUP BY", 
                  "logic_production_unit.descid,",
                  "units.group_size,",
                  "units.faction,",
                  "units.tier",
            ") as subtable1",
      "LEFT JOIN",
         "(",
            "SELECT",
               "logic_production_unit.descid as descid,",
               "COUNT(*) as total_players",
            "FROM",
               "pregame_skirmish_faction",
            "LEFT JOIN",
               "logic_production_unit ON", 
                  "logic_production_unit.session_id = pregame_skirmish_faction.session_id AND",
                  "logic_production_unit.basic_sessionid = pregame_skirmish_faction.sessionid AND",
                  "logic_production_unit.basic_faction = pregame_skirmish_faction.faction",
            "GROUP BY",
               "logic_production_unit.descid",
            ") AS subtable2 ON",
               "subtable1.descid = subtable2.descid"            
         ]
      }
  ]
}
